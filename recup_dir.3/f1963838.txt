 c=a.SIMD;
var d;
var e=b.ImportNow("to_string_tag_symbol");
b.Import(function(f){
d=f.MakeTypeError;
});
var g=c.Float32x4;


var h=c.Int32x4;

var i=c.Int16x8;

var j=c.Int8x16;


var k=c.Uint32x4;

var l=c.Uint16x8;

var m=c.Uint8x16;


var n=c.Bool32x4;

var o=c.Bool16x8;

var p=c.Bool8x16;



function Float32x4CheckJS(q){
return %Float32x4Check(q);
}
function Float32x4ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='float32x4'){
throw d(44,
"Float32x4.prototype.toString",this);
}
var s="SIMD.Float32x4(";
s+=%Float32x4ExtractLane(r,0);
for(var t=1;t<4;t++){
s+=", "+%Float32x4ExtractLane(r,t);
}
return s+")";
}
function Float32x4ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='float32x4'){
throw d(44,
"Float32x4.prototype.toLocaleString",this);
}
var s="SIMD.Float32x4(";
s+=%Float32x4ExtractLane(r,0).toLocaleString();
for(var t=1;t<4;t++){
s+=", "+%Float32x4ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Float32x4ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='float32x4'){
throw d(44,
"Float32x4.prototype.valueOf",this);
}
return r;
}
function Float32x4ExtractLaneJS(u,v){
return %Float32x4ExtractLane(u,v);
}


function Int32x4CheckJS(q){
return %Int32x4Check(q);
}
function Int32x4ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int32x4'){
throw d(44,
"Int32x4.prototype.toString",this);
}
var s="SIMD.Int32x4(";
s+=%Int32x4ExtractLane(r,0);
for(var t=1;t<4;t++){
s+=", "+%Int32x4ExtractLane(r,t);
}
return s+")";
}
function Int32x4ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int32x4'){
throw d(44,
"Int32x4.prototype.toLocaleString",this);
}
var s="SIMD.Int32x4(";
s+=%Int32x4ExtractLane(r,0).toLocaleString();
for(var t=1;t<4;t++){
s+=", "+%Int32x4ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Int32x4ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='int32x4'){
throw d(44,
"Int32x4.prototype.valueOf",this);
}
return r;
}
function Int32x4ExtractLaneJS(u,v){
return %Int32x4ExtractLane(u,v);
}

function Int16x8CheckJS(q){
return %Int16x8Check(q);
}
function Int16x8ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int16x8'){
throw d(44,
"Int16x8.prototype.toString",this);
}
var s="SIMD.Int16x8(";
s+=%Int16x8ExtractLane(r,0);
for(var t=1;t<8;t++){
s+=", "+%Int16x8ExtractLane(r,t);
}
return s+")";
}
function Int16x8ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int16x8'){
throw d(44,
"Int16x8.prototype.toLocaleString",this);
}
var s="SIMD.Int16x8(";
s+=%Int16x8ExtractLane(r,0).toLocaleString();
for(var t=1;t<8;t++){
s+=", "+%Int16x8ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Int16x8ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='int16x8'){
throw d(44,
"Int16x8.prototype.valueOf",this);
}
return r;
}
function Int16x8ExtractLaneJS(u,v){
return %Int16x8ExtractLane(u,v);
}

function Int8x16CheckJS(q){
return %Int8x16Check(q);
}
function Int8x16ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int8x16'){
throw d(44,
"Int8x16.prototype.toString",this);
}
var s="SIMD.Int8x16(";
s+=%Int8x16ExtractLane(r,0);
for(var t=1;t<16;t++){
s+=", "+%Int8x16ExtractLane(r,t);
}
return s+")";
}
function Int8x16ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='int8x16'){
throw d(44,
"Int8x16.prototype.toLocaleString",this);
}
var s="SIMD.Int8x16(";
s+=%Int8x16ExtractLane(r,0).toLocaleString();
for(var t=1;t<16;t++){
s+=", "+%Int8x16ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Int8x16ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='int8x16'){
throw d(44,
"Int8x16.prototype.valueOf",this);
}
return r;
}
function Int8x16ExtractLaneJS(u,v){
return %Int8x16ExtractLane(u,v);
}


function Uint32x4CheckJS(q){
return %Uint32x4Check(q);
}
function Uint32x4ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint32x4'){
throw d(44,
"Uint32x4.prototype.toString",this);
}
var s="SIMD.Uint32x4(";
s+=%Uint32x4ExtractLane(r,0);
for(var t=1;t<4;t++){
s+=", "+%Uint32x4ExtractLane(r,t);
}
return s+")";
}
function Uint32x4ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint32x4'){
throw d(44,
"Uint32x4.prototype.toLocaleString",this);
}
var s="SIMD.Uint32x4(";
s+=%Uint32x4ExtractLane(r,0).toLocaleString();
for(var t=1;t<4;t++){
s+=", "+%Uint32x4ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Uint32x4ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint32x4'){
throw d(44,
"Uint32x4.prototype.valueOf",this);
}
return r;
}
function Uint32x4ExtractLaneJS(u,v){
return %Uint32x4ExtractLane(u,v);
}

function Uint16x8CheckJS(q){
return %Uint16x8Check(q);
}
function Uint16x8ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint16x8'){
throw d(44,
"Uint16x8.prototype.toString",this);
}
var s="SIMD.Uint16x8(";
s+=%Uint16x8ExtractLane(r,0);
for(var t=1;t<8;t++){
s+=", "+%Uint16x8ExtractLane(r,t);
}
return s+")";
}
function Uint16x8ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint16x8'){
throw d(44,
"Uint16x8.prototype.toLocaleString",this);
}
var s="SIMD.Uint16x8(";
s+=%Uint16x8ExtractLane(r,0).toLocaleString();
for(var t=1;t<8;t++){
s+=", "+%Uint16x8ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Uint16x8ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint16x8'){
throw d(44,
"Uint16x8.prototype.valueOf",this);
}
return r;
}
function Uint16x8ExtractLaneJS(u,v){
return %Uint16x8ExtractLane(u,v);
}

function Uint8x16CheckJS(q){
return %Uint8x16Check(q);
}
function Uint8x16ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint8x16'){
throw d(44,
"Uint8x16.prototype.toString",this);
}
var s="SIMD.Uint8x16(";
s+=%Uint8x16ExtractLane(r,0);
for(var t=1;t<16;t++){
s+=", "+%Uint8x16ExtractLane(r,t);
}
return s+")";
}
function Uint8x16ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint8x16'){
throw d(44,
"Uint8x16.prototype.toLocaleString",this);
}
var s="SIMD.Uint8x16(";
s+=%Uint8x16ExtractLane(r,0).toLocaleString();
for(var t=1;t<16;t++){
s+=", "+%Uint8x16ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Uint8x16ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='uint8x16'){
throw d(44,
"Uint8x16.prototype.valueOf",this);
}
return r;
}
function Uint8x16ExtractLaneJS(u,v){
return %Uint8x16ExtractLane(u,v);
}


function Bool32x4CheckJS(q){
return %Bool32x4Check(q);
}
function Bool32x4ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool32x4'){
throw d(44,
"Bool32x4.prototype.toString",this);
}
var s="SIMD.Bool32x4(";
s+=%Bool32x4ExtractLane(r,0);
for(var t=1;t<4;t++){
s+=", "+%Bool32x4ExtractLane(r,t);
}
return s+")";
}
function Bool32x4ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool32x4'){
throw d(44,
"Bool32x4.prototype.toLocaleString",this);
}
var s="SIMD.Bool32x4(";
s+=%Bool32x4ExtractLane(r,0).toLocaleString();
for(var t=1;t<4;t++){
s+=", "+%Bool32x4ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Bool32x4ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool32x4'){
throw d(44,
"Bool32x4.prototype.valueOf",this);
}
return r;
}
function Bool32x4ExtractLaneJS(u,v){
return %Bool32x4ExtractLane(u,v);
}

function Bool16x8CheckJS(q){
return %Bool16x8Check(q);
}
function Bool16x8ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool16x8'){
throw d(44,
"Bool16x8.prototype.toString",this);
}
var s="SIMD.Bool16x8(";
s+=%Bool16x8ExtractLane(r,0);
for(var t=1;t<8;t++){
s+=", "+%Bool16x8ExtractLane(r,t);
}
return s+")";
}
function Bool16x8ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool16x8'){
throw d(44,
"Bool16x8.prototype.toLocaleString",this);
}
var s="SIMD.Bool16x8(";
s+=%Bool16x8ExtractLane(r,0).toLocaleString();
for(var t=1;t<8;t++){
s+=", "+%Bool16x8ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Bool16x8ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool16x8'){
throw d(44,
"Bool16x8.prototype.valueOf",this);
}
return r;
}
function Bool16x8ExtractLaneJS(u,v){
return %Bool16x8ExtractLane(u,v);
}

function Bool8x16CheckJS(q){
return %Bool8x16Check(q);
}
function Bool8x16ToString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool8x16'){
throw d(44,
"Bool8x16.prototype.toString",this);
}
var s="SIMD.Bool8x16(";
s+=%Bool8x16ExtractLane(r,0);
for(var t=1;t<16;t++){
s+=", "+%Bool8x16ExtractLane(r,t);
}
return s+")";
}
function Bool8x16ToLocaleString(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool8x16'){
throw d(44,
"Bool8x16.prototype.toLocaleString",this);
}
var s="SIMD.Bool8x16(";
s+=%Bool8x16ExtractLane(r,0).toLocaleString();
for(var t=1;t<16;t++){
s+=", "+%Bool8x16ExtractLane(r,t).toLocaleString();
}
return s+")";
}
function Bool8x16ValueOf(){
var r=%_ValueOf(this);
if(typeof(r)!=='bool8x16'){
throw d(44,
"Bool8x16.prototype.valueOf",this);
}
return r;
}
function Bool8x16ExtractLaneJS(u,v){
return %Bool8x16ExtractLane(u,v);
}



function Int32x4ShiftLeftByScalarJS(u,w){
return %Int32x4ShiftLeftByScalar(u,w);
}
function Int32x4ShiftRightByScalarJS(u,w){
return %Int32x4ShiftRightByScalar(u,w);
}

function Int16x8ShiftLeftByScalarJS(u,w){
return %Int16x8ShiftLeftByScalar(u,w);
}
function Int16x8ShiftRightByScalarJS(u,w){
return %Int16x8ShiftRightByScalar(u,w);
}

function Int8x16ShiftLeftByScalarJS(u,w){
return %Int8x16ShiftLeftByScalar(u,w);
}
function Int8x16ShiftRightByScalarJS(u,w){
return %Int8x16ShiftRightByScalar(u,w);
}


function Uint32x4ShiftLeftByScalarJS(u,w){
return %Uint32x4ShiftLeftByScalar(u,w);
}
function Uint32x4ShiftRightByScalarJS(u,w){
return %Uint32x4ShiftRightByScalar(u,w);
}

function Uint16x8ShiftLeftByScalarJS(u,w){
return %Uint16x8ShiftLeftByScalar(u,w);
}
function Uint16x8ShiftRightByScalarJS(u,w){
return %Uint16x8ShiftRightByScalar(u,w);
}

function Uint8x16ShiftLeftByScalarJS(u,w){
return %Uint8x16ShiftLeftByScalar(u,w);
}
function Uint8x16ShiftRightByScalarJS(u,w){
return %Uint8x16ShiftRightByScalar(u,w);
}


function Int16x8AddSaturateJS(q,x){
return %Int16x8AddSaturate(q,x);
}
function Int16x8SubSaturateJS(q,x){
return %Int16x8SubSaturate(q,x);
}

function Int8x16AddSaturateJS(q,x){
return %Int8x16AddSaturate(q,x);
}
function Int8x16SubSaturateJS(q,x){
return %Int8x16SubSaturate(q,x);
}

function Uint8x16AddSaturateJS(q,x){
return %Uint8x16AddSaturate(q,x);
}
function Uint8x16SubSaturateJS(q,x){
return %Uint8x16SubSaturate(q,x);
}

function Uint16x8AddSaturateJS(q,x){
return %Uint16x8AddSaturate(q,x);
}
function Uint16x8SubSaturateJS(q,x){
return %Uint16x8SubSaturate(q,x);
}


function Float32x4NegJS(q){
return %Float32x4Neg(q);
}


function Int32x4NegJS(q){
return %Int32x4Neg(q);
}

function Int16x8NegJS(q){
return %Int16x8Neg(q);
}

function Int8x16NegJS(q){
return %Int8x16Neg(q);
}


function Bool32x4ReplaceLaneJS(u,v,r){
return %Bool32x4ReplaceLane(u,v,r);
}
function Bool32x4AnyTrueJS(y){
return %Bool32x4AnyTrue(y);
}
function Bool32x4AllTrueJS(y){
return %Bool32x4AllTrue(y);
}

function Bool16x8ReplaceLaneJS(u,v,r){
return %Bool16x8ReplaceLane(u,v,r);
}
function Bool16x8AnyTrueJS(y){
return %Bool16x8AnyTrue(y);
}
function Bool16x8AllTrueJS(y){
return %Bool16x8AllTrue(y);
}

function Bool8x16ReplaceLaneJS(u,v,r){
return %Bool8x16ReplaceLane(u,v,r);
}
function Bool8x16AnyTrueJS(y){
return %Bool8x16AnyTrue(y);
}
function Bool8x16AllTrueJS(y){
return %Bool8x16AllTrue(y);
}


function Float32x4ReplaceLaneJS(u,v,r){
return %Float32x4ReplaceLane(u,v,(%_ToNumber(r)));
}
function Float32x4SelectJS(z,q,x){
return %Float32x4Select(z,q,x);
}
function Float32x4AddJS(q,x){
return %Float32x4Add(q,x);
}
function Float32x4SubJS(q,x){
return %Float32x4Sub(q,x);
}
function Float32x4MulJS(q,x){
return %Float32x4Mul(q,x);
}
function Float32x4MinJS(q,x){
return %Float32x4Min(q,x);
}
function Float32x4MaxJS(q,x){
return %Float32x4Max(q,x);
}
function Float32x4EqualJS(q,x){
return %Float32x4Equal(q,x);
}
function Float32x4NotEqualJS(q,x){
return %Float32x4NotEqual(q,x);
}
function Float32x4LessThanJS(q,x){
return %Float32x4LessThan(q,x);
}
function Float32x4LessThanOrEqualJS(q,x){
return %Float32x4LessThanOrEqual(q,x);
}
function Float32x4GreaterThanJS(q,x){
return %Float32x4GreaterThan(q,x);
}
function Float32x4GreaterThanOrEqualJS(q,x){
return %Float32x4GreaterThanOrEqual(q,x);
}
function Float32x4LoadJS(A,B){
return %Float32x4Load(A,B);
}
function Float32x4StoreJS(A,B,q){
return %Float32x4Store(A,B,q);
}


function Int32x4ReplaceLaneJS(u,v,r){
return %Int32x4ReplaceLane(u,v,(%_ToNumber(r)));
}
function Int32x4SelectJS(z,q,x){
return %Int32x4Select(z,q,x);
}
function Int32x4AddJS(q,x){
return %Int32x4Add(q,x);
}
function Int32x4SubJS(q,x){
return %Int32x4Sub(q,x);
}
function Int32x4MulJS(q,x){
return %Int32x4Mul(q,x);
}
function Int32x4MinJS(q,x){
return %Int32x4Min(q,x);
}
function Int32x4MaxJS(q,x){
return %Int32x4Max(q,x);
}
function Int32x4EqualJS(q,x){
return %Int32x4Equal(q,x);
}
function Int32x4NotEqualJS(q,x){
return %Int32x4NotEqual(q,x);
}
function Int32x4LessThanJS(q,x){
return %Int32x4LessThan(q,x);
}
function Int32x4LessThanOrEqualJS(q,x){
return %Int32x4LessThanOrEqual(q,x);
}
function Int32x4GreaterThanJS(q,x){
return %Int32x4GreaterThan(q,x);
}
function Int32x4GreaterThanOrEqualJS(q,x){
return %Int32x4GreaterThanOrEqual(q,x);
}
function Int32x4LoadJS(A,B){
return %Int32x4Load(A,B);
}
function Int32x4StoreJS(A,B,q){
return %Int32x4Store(A,B,q);
}

function Int16x8ReplaceLaneJS(u,v,r){
return %Int16x8ReplaceLane(u,v,(%_ToNumber(r)));
}
function Int16x8SelectJS(z,q,x){
return %Int16x8Select(z,q,x);
}
function Int16x8AddJS(q,x){
return %Int16x8Add(q,x);
}
function Int16x8SubJS(q,x){
return %Int16x8Sub(q,x);
}
function Int16x8MulJS(q,x){
return %Int16x8Mul(q,x);
}
function Int16x8MinJS(q,x){
return %Int16x8Min(q,x);
}
function Int16x8MaxJS(q,x){
return %Int16x8Max(q,x);
}
function Int16x8EqualJS(q,x){
return %Int16x8Equal(q,x);
}
function Int16x8NotEqualJS(q,x){
return %Int16x8NotEqual(q,x);
}
function Int16x8LessThanJS(q,x){
return %Int16x8LessThan(q,x);
}
function Int16x8LessThanOrEqualJS(q,x){
return %Int16x8LessThanOrEqual(q,x);
}
function Int16x8GreaterThanJS(q,x){
return %Int16x8GreaterThan(q,x);
}
function Int16x8GreaterThanOrEqualJS(q,x){
return %Int16x8GreaterThanOrEqual(q,x);
}
function Int16x8LoadJS(A,B){
return %Int16x8Load(A,B);
}
function Int16x8StoreJS(A,B,q){
return %Int16x8Store(A,B,q);
}

function Int8x16ReplaceLaneJS(u,v,r){
return %Int8x16ReplaceLane(u,v,(%_ToNumber(r)));
}
function Int8x16SelectJS(z,q,x){
return %Int8x16Select(z,q,x);
}
function Int8x16AddJS(q,x){
return %Int8x16Add(q,x);
}
function Int8x16SubJS(q,x){
return %Int8x16Sub(q,x);
}
function Int8x16MulJS(q,x){
return %Int8x16Mul(q,x);
}
function Int8x16MinJS(q,x){
return %Int8x16Min(q,x);
}
function Int8x16MaxJS(q,x){
return %Int8x16Max(q,x);
}
function Int8x16EqualJS(q,x){
return %Int8x16Equal(q,x);
}
function Int8x16NotEqualJS(q,x){
return %Int8x16NotEqual(q,x);
}
function Int8x16LessThanJS(q,x){
return %Int8x16LessThan(q,x);
}
function Int8x16LessThanOrEqualJS(q,x){
return %Int8x16LessThanOrEqual(q,x);
}
function Int8x16GreaterThanJS(q,x){
return %Int8x16GreaterThan(q,x);
}
function Int8x16GreaterThanOrEqualJS(q,x){
return %Int8x16GreaterThanOrEqual(q,x);
}
function Int8x16LoadJS(A,B){
return %Int8x16Load(A,B);
}
function Int8x16StoreJS(A,B,q){
return %Int8x16Store(A,B,q);
}


function Uint32x4ReplaceLaneJS(u,v,r){
return %Uint32x4ReplaceLane(u,v,(%_ToNumber(r)));
}
function Uint32x4SelectJS(z,q,x){
return %Uint32x4Select(z,q,x);
}
function Uint32x4AddJS(q,x){
return %Uint32x4Add(q,x);
}
function Uint32x4SubJS(q,x){
return %Uint32x4Sub(q,x);
}
function Uint32x4MulJS(q,x){
return %Uint32x4Mul(q,x);
}
function Uint32x4MinJS(q,x){
return %Uint32x4Min(q,x);
}
function Uint32x4MaxJS(q,x){
return %Uint32x4Max(q,x);
}
function Uint32x4EqualJS(q,x){
return %Uint32x4Equal(q,x);
}
function Uint32x4NotEqualJS(q,x){
return %Uint32x4NotEqual(q,x);
}
function Uint32x4LessThanJS(q,x){
return %Uint32x4LessThan(q,x);
}
function Uint32x4LessThanOrEqualJS(q,x){
return %Uint32x4LessThanOrEqual(q,x);
}
function Uint32x4GreaterThanJS(q,x){
return %Uint32x4GreaterThan(q,x);
}
function Uint32x4GreaterThanOrEqualJS(q,x){
return %Uint32x4GreaterThanOrEqual(q,x);
}
function Uint32x4LoadJS(A,B){
return %Uint32x4Load(A,B);
}
function Uint32x4StoreJS(A,B,q){
return %Uint32x4Store(A,B,q);
}

function Uint16x8ReplaceLaneJS(u,v,r){
return %Uint16x8ReplaceLane(u,v,(%_ToNumber(r)));
}
function Uint16x8SelectJS(z,q,x){
return %Uint16x8Select(z,q,x);
}
function Uint16x8AddJS(q,x){
return %Uint16x8Add(q,x);
}
function Uint16x8SubJS(q,x){
return %Uint16x8Sub(q,x);
}
function Uint16x8MulJS(q,x){
return %Uint16x8Mul(q,x);
}
function Uint16x8MinJS(q,x){
return %Uint16x8Min(q,x);
}
function Uint16x8MaxJS(q,x){
return %Uint16x8Max(q,x);
}
function Uint16x8EqualJS(q,x){
return %Uint16x8Equal(q,x);
}
function Uint16x8NotEqualJS(q,x){
return %Uint16x8NotEqual(q,x);
}
function Uint16x8LessThanJS(q,x){
return %Uint16x8LessThan(q,x);
}
function Uint16x8LessThanOrEqualJS(q,x){
return %Uint16x8LessThanOrEqual(q,x);
}
function Uint16x8GreaterThanJS(q,x){
return %Uint16x8GreaterThan(q,x);
}
function Uint16x8GreaterThanOrEqualJS(q,x){
return %Uint16x8GreaterThanOrEqual(q,x);
}
function Uint16x8LoadJS(A,B){
return %Uint16x8Load(A,B);
}
function Uint16x8StoreJS(A,B,q){
return %Uint16x8Store(A,B,q);
}

function Uint8x16ReplaceLaneJS(u,v,r){
return %Uint8x16ReplaceLane(u,v,(%_ToNumber(r)));
}
function Uint8x16SelectJS(z,q,x){
return %Uint8x16Select(z,q,x);
}
function Uint8x16AddJS(q,x){
return %Uint8x16Add(q,x);
}
function Uint8x16SubJS(q,x){
return %Uint8x16Sub(q,x);
}
function Uint8x16MulJS(q,x){
return %Uint8x16Mul(q,x);
}
function Uint8x16MinJS(q,x){
return %Uint8x16Min(q,x);
}
function Uint8x16MaxJS(q,x){
return %Uint8x16Max(q,x);
}
function Uint8x16EqualJS(q,x){
return %Uint8x16Equal(q,x);
}
function Uint8x16NotEqualJS(q,x){
return %Uint8x16NotEqual(q,x);
}
function Uint8x16LessThanJS(q,x){
return %Uint8x16LessThan(q,x);
}
function Uint8x16LessThanOrEqualJS(q,x){
return %Uint8x16LessThanOrEqual(q,x);
}
function Uint8x16GreaterThanJS(q,x){
return %Uint8x16GreaterThan(q,x);
}
function Uint8x16GreaterThanOrEqualJS(q,x){
return %Uint8x16GreaterThanOrEqual(q,x);
}
function Uint8x16LoadJS(A,B){
return %Uint8x16Load(A,B);
}
function Uint8x16StoreJS(A,B,q){
return %Uint8x16Store(A,B,q);
}



function Int32x4AndJS(q,x){
return %Int32x4And(q,x);
}
function Int32x4OrJS(q,x){
return %Int32x4Or(q,x);
}
function Int32x4XorJS(q,x){
return %Int32x4Xor(q,x);
}
function Int32x4NotJS(q){
return %Int32x4Not(q);
}

function Int16x8AndJS(q,x){
return %Int16x8And(q,x);
}
function Int16x8OrJS(q,x){
return %Int16x8Or(q,x);
}
function Int16x8XorJS(q,x){
return %Int16x8Xor(q,x);
}
function Int16x8NotJS(q){
return %Int16x8Not(q);
}

function Int8x16AndJS(q,x){
return %Int8x16And(q,x);
}
function Int8x16OrJS(q,x){
return %Int8x16Or(q,x);
}
function Int8x16XorJS(q,x){
return %Int8x16Xor(q,x);
}
function Int8x16NotJS(q){
return %Int8x16Not(q);
}


function Uint32x4AndJS(q,x){
return %Uint32x4And(q,x);
}
function Uint32x4OrJS(q,x){
return %Uint32x4Or(q,x);
}
function Uint32x4XorJS(q,x){
return %Uint32x4Xor(q,x);
}
function Uint32x4NotJS(q){
return %Uint32x4Not(q);
}

function Uint16x8AndJS(q,x){
return %Uint16x8And(q,x);
}
function Uint16x8OrJS(q,x){
return %Uint16x8Or(q,x);
}
function Uint16x8XorJS(q,x){
return %Uint16x8Xor(q,x);
}
function Uint16x8NotJS(q){
return %Uint16x8Not(q);
}

function Uint8x16AndJS(q,x){
return %Uint8x16And(q,x);
}
function Uint8x16OrJS(q,x){
return %Uint8x16Or(q,x);
}
function Uint8x16XorJS(q,x){
return %Uint8x16Xor(q,x);
}
function Uint8x16NotJS(q){
return %Uint8x16Not(q);
}


function Bool32x4AndJS(q,x){
return %Bool32x4And(q,x);
}
function Bool32x4OrJS(q,x){
return %Bool32x4Or(q,x);
}
function Bool32x4XorJS(q,x){
return %Bool32x4Xor(q,x);
}
function Bool32x4NotJS(q){
return %Bool32x4Not(q);
}

function Bool16x8AndJS(q,x){
return %Bool16x8And(q,x);
}
function Bool16x8OrJS(q,x){
return %Bool16x8Or(q,x);
}
function Bool16x8XorJS(q,x){
return %Bool16x8Xor(q,x);
}
function Bool16x8NotJS(q){
return %Bool16x8Not(q);
}

function Bool8x16AndJS(q,x){
return %Bool8x16And(q,x);
}
function Bool8x16OrJS(q,x){
return %Bool8x16Or(q,x);
}
function Bool8x16XorJS(q,x){
return %Bool8x16Xor(q,x);
}
function Bool8x16NotJS(q){
return %Bool8x16Not(q);
}



function Float32x4FromInt32x4JS(q){
return %Float32x4FromInt32x4(q);
}

function Float32x4FromUint32x4JS(q){
return %Float32x4FromUint32x4(q);
}

function Int32x4FromFloat32x4JS(q){
return %Int32x4FromFloat32x4(q);
}

function Int32x4FromUint32x4JS(q){
return %Int32x4FromUint32x4(q);
}

function Uint32x4FromFloat32x4JS(q){
return %Uint32x4FromFloat32x4(q);
}

function Uint32x4FromInt32x4JS(q){
return %Uint32x4FromInt32x4(q);
}

function Int16x8FromUint16x8JS(q){
return %Int16x8FromUint16x8(q);
}

function Uint16x8FromInt16x8JS(q){
return %Uint16x8FromInt16x8(q);
}

function Int8x16FromUint8x16JS(q){
return %Int8x16FromUint8x16(q);
}

function Uint8x16FromInt8x16JS(q){
return %Uint8x16FromInt8x16(q);
}


function Float32x4FromInt32x4BitsJS(q){
return %Float32x4FromInt32x4Bits(q);
}

function Float32x4FromUint32x4BitsJS(q){
return %Float32x4FromUint32x4Bits(q);
}

function Float32x4FromInt16x8BitsJS(q){
return %Float32x4FromInt16x8Bits(q);
}

function Float32x4FromUint16x8BitsJS(q){
return %Float32x4FromUint16x8Bits(q);
}

function Float32x4FromInt8x16BitsJS(q){
return %Float32x4FromInt8x16Bits(q);
}

function Float32x4FromUint8x16BitsJS(q){
return %Float32x4FromUint8x16Bits(q);
}

function Int32x4FromFloat32x4BitsJS(q){
return %Int32x4FromFloat32x4Bits(q);
}

function Int32x4FromUint32x4BitsJS(q){
return %Int32x4FromUint32x4Bits(q);
}

function Int32x4FromInt16x8BitsJS(q){
return %Int32x4FromInt16x8Bits(q);
}

function Int32x4FromUint16x8BitsJS(q){
return %Int32x4FromUint16x8Bits(q);
}

function Int32x4FromInt8x16BitsJS(q){
return %Int32x4FromInt8x16Bits(q);
}

function Int32x4FromUint8x16BitsJS(q){
return %Int32x4FromUint8x16Bits(q);
}

function Uint32x4FromFloat32x4BitsJS(q){
return %Uint32x4FromFloat32x4Bits(q);
}

function Uint32x4FromInt32x4BitsJS(q){
return %Uint32x4FromInt32x4Bits(q);
}

function Uint32x4FromInt16x8BitsJS(q){
return %Uint32x4FromInt16x8Bits(q);
}

function Uint32x4FromUint16x8BitsJS(q){
return %Uint32x4FromUint16x8Bits(q);
}

function Uint32x4FromInt8x16BitsJS(q){
return %Uint32x4FromInt8x16Bits(q);
}

function Uint32x4FromUint8x16BitsJS(q){
return %Uint32x4FromUint8x16Bits(q);
}

function Int16x8FromFloat32x4BitsJS(q){
return %Int16x8FromFloat32x4Bits(q);
}

function Int16x8FromInt32x4BitsJS(q){
return %Int16x8FromInt32x4Bits(q);
}

function Int16x8FromUint32x4BitsJS(q){
return %Int16x8FromUint32x4Bits(q);
}

function Int16x8FromUint16x8BitsJS(q){
return %Int16x8FromUint16x8Bits(q);
}

function Int16x8FromInt8x16BitsJS(q){
return %Int16x8FromInt8x16Bits(q);
}

function Int16x8FromUint8x16BitsJS(q){
return %Int16x8FromUint8x16Bits(q);
}

function Uint16x8FromFloat32x4BitsJS(q){
return %Uint16x8FromFloat32x4Bits(q);
}

function Uint16x8FromInt32x4BitsJS(q){
return %Uint16x8FromInt32x4Bits(q);
}

function Uint16x8FromUint32x4BitsJS(q){
return %Uint16x8FromUint32x4Bits(q);
}

function Uint16x8FromInt16x8BitsJS(q){
return %Uint16x8FromInt16x8Bits(q);
}

function Uint16x8FromInt8x16BitsJS(q){
return %Uint16x8FromInt8x16Bits(q);
}

function Uint16x8FromUint8x16BitsJS(q){
return %Uint16x8FromUint8x16Bits(q);
}

function Int8x16FromFloat32x4BitsJS(q){
return %Int8x16FromFloat32x4Bits(q);
}

function Int8x16FromInt32x4BitsJS(q){
return %Int8x16FromInt32x4Bits(q);
}

function Int8x16FromUint32x4BitsJS(q){
return %Int8x16FromUint32x4Bits(q);
}

function Int8x16FromInt16x8BitsJS(q){
return %Int8x16FromInt16x8Bits(q);
}

function Int8x16FromUint16x8BitsJS(q){
return %Int8x16FromUint16x8Bits(q);
}

function Int8x16FromUint8x16BitsJS(q){
return %Int8x16FromUint8x16Bits(q);
}

function Uint8x16FromFloat32x4BitsJS(q){
return %Uint8x16FromFloat32x4Bits(q);
}

function Uint8x16FromInt32x4BitsJS(q){
return %Uint8x16FromInt32x4Bits(q);
}

function Uint8x16FromUint32x4BitsJS(q){
return %Uint8x16FromUint32x4Bits(q);
}

function Uint8x16FromInt16x8BitsJS(q){
return %Uint8x16FromInt16x8Bits(q);
}

function Uint8x16FromUint16x8BitsJS(q){
return %Uint8x16FromUint16x8Bits(q);
}

function Uint8x16FromInt8x16BitsJS(q){
return %Uint8x16FromInt8x16Bits(q);
}


function Float32x4Load1JS(A,B){
return %Float32x4Load1(A,B);
}
function Float32x4Store1JS(A,B,q){
return %Float32x4Store1(A,B,q);
}

function Float32x4Load2JS(A,B){
return %Float32x4Load2(A,B);
}
function Float32x4Store2JS(A,B,q){
return %Float32x4Store2(A,B,q);
}

function Float32x4Load3JS(A,B){
return %Float32x4Load3(A,B);
}
function Float32x4Store3JS(A,B,q){
return %Float32x4Store3(A,B,q);
}

function Int32x4Load1JS(A,B){
return %Int32x4Load1(A,B);
}
function Int32x4Store1JS(A,B,q){
return %Int32x4Store1(A,B,q);
}

function Int32x4Load2JS(A,B){
return %Int32x4Load2(A,B);
}
function Int32x4Store2JS(A,B,q){
return %Int32x4Store2(A,B,q);
}

function Int32x4Load3JS(A,B){
return %Int32x4Load3(A,B);
}
function Int32x4Store3JS(A,B,q){
return %Int32x4Store3(A,B,q);
}

function Uint32x4Load1JS(A,B){
return %Uint32x4Load1(A,B);
}
function Uint32x4Store1JS(A,B,q){
return %Uint32x4Store1(A,B,q);
}

function Uint32x4Load2JS(A,B){
return %Uint32x4Load2(A,B);
}
function Uint32x4Store2JS(A,B,q){
return %Uint32x4Store2(A,B,q);
}

function Uint32x4Load3JS(A,B){
return %Uint32x4Load3(A,B);
}
function Uint32x4Store3JS(A,B,q){
return %Uint32x4Store3(A,B,q);
}


function Float32x4Splat(y){
return %CreateFloat32x4(y,y,y,y);
}
function Float32x4SwizzleJS(q,C,D,E,F){
return %Float32x4Swizzle(q,C,D,E,F);
}
function Float32x4ShuffleJS(q,x,C,D,E,F){
return %Float32x4Shuffle(q,x,C,D,E,F);
}

function Int32x4Splat(y){
return %CreateInt32x4(y,y,y,y);
}
function Int32x4SwizzleJS(q,C,D,E,F){
return %Int32x4Swizzle(q,C,D,E,F);
}
function Int32x4ShuffleJS(q,x,C,D,E,F){
return %Int32x4Shuffle(q,x,C,D,E,F);
}

function Uint32x4Splat(y){
return %CreateUint32x4(y,y,y,y);
}
function Uint32x4SwizzleJS(q,C,D,E,F){
return %Uint32x4Swizzle(q,C,D,E,F);
}
function Uint32x4ShuffleJS(q,x,C,D,E,F){
return %Uint32x4Shuffle(q,x,C,D,E,F);
}

function Bool32x4Splat(y){
return %CreateBool32x4(y,y,y,y);
}
function Bool32x4SwizzleJS(q,C,D,E,F){
return %Bool32x4Swizzle(q,C,D,E,F);
}
function Bool32x4ShuffleJS(q,x,C,D,E,F){
return %Bool32x4Shuffle(q,x,C,D,E,F);
}


function Int16x8Splat(y){
return %CreateInt16x8(y,y,y,y,y,y,y,y);
}
function Int16x8SwizzleJS(q,C,D,E,F,G,H,I,J){
return %Int16x8Swizzle(q,C,D,E,F,G,H,I,J);
}
function Int16x8ShuffleJS(q,x,C,D,E,F,G,H,I,J){
return %Int16x8Shuffle(q,x,C,D,E,F,G,H,I,J);
}

function Uint16x8Splat(y){
return %CreateUint16x8(y,y,y,y,y,y,y,y);
}
function Uint16x8SwizzleJS(q,C,D,E,F,G,H,I,J){
return %Uint16x8Swizzle(q,C,D,E,F,G,H,I,J);
}
function Uint16x8ShuffleJS(q,x,C,D,E,F,G,H,I,J){
return %Uint16x8Shuffle(q,x,C,D,E,F,G,H,I,J);
}

function Bool16x8Splat(y){
return %CreateBool16x8(y,y,y,y,y,y,y,y);
}
function Bool16x8SwizzleJS(q,C,D,E,F,G,H,I,J){
return %Bool16x8Swizzle(q,C,D,E,F,G,H,I,J);
}
function Bool16x8ShuffleJS(q,x,C,D,E,F,G,H,I,J){
return %Bool16x8Shuffle(q,x,C,D,E,F,G,H,I,J);
}


function Int8x16Splat(y){
return %CreateInt8x16(y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y);
}
function Int8x16SwizzleJS(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
return %Int8x16Swizzle(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15);
}
function Int8x16ShuffleJS(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15){
return %Int8x16Shuffle(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15);
}

function Uint8x16Splat(y){
return %CreateUint8x16(y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y);
}
function Uint8x16SwizzleJS(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
return %Uint8x16Swizzle(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15);
}
function Uint8x16ShuffleJS(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15){
return %Uint8x16Shuffle(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15);
}

function Bool8x16Splat(y){
return %CreateBool8x16(y,y,y,y,y,y,y,y,y,y,y,y,y,y,y,y);
}
function Bool8x16SwizzleJS(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
return %Bool8x16Swizzle(q,C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15);
}
function Bool8x16ShuffleJS(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15){
return %Bool8x16Shuffle(q,x,C,D,E,F,G,H,I,J,c8,c9,c10,
c11,c12,c13,c14,c15);
}


function Float32x4Constructor(C,D,E,F){
if(!(new.target===(void 0))){
throw d(66,"Float32x4");
}
return %CreateFloat32x4((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)));
}
function Int32x4Constructor(C,D,E,F){
if(!(new.target===(void 0))){
throw d(66,"Int32x4");
}
return %CreateInt32x4((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)));
}
function Uint32x4Constructor(C,D,E,F){
if(!(new.target===(void 0))){
throw d(66,"Uint32x4");
}
return %CreateUint32x4((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)));
}
function Bool32x4Constructor(C,D,E,F){
if(!(new.target===(void 0))){
throw d(66,"Bool32x4");
}
return %CreateBool32x4(C,D,E,F);
}
function Int16x8Constructor(C,D,E,F,G,H,I,J){
if(!(new.target===(void 0))){
throw d(66,"Int16x8");
}
return %CreateInt16x8((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)),
(%_ToNumber(G)),(%_ToNumber(H)),
(%_ToNumber(I)),(%_ToNumber(J)));
}
function Uint16x8Constructor(C,D,E,F,G,H,I,J){
if(!(new.target===(void 0))){
throw d(66,"Uint16x8");
}
return %CreateUint16x8((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)),
(%_ToNumber(G)),(%_ToNumber(H)),
(%_ToNumber(I)),(%_ToNumber(J)));
}
function Bool16x8Constructor(C,D,E,F,G,H,I,J){
if(!(new.target===(void 0))){
throw d(66,"Bool16x8");
}
return %CreateBool16x8(C,D,E,F,G,H,I,J);
}
function Int8x16Constructor(C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
if(!(new.target===(void 0))){
throw d(66,"Int8x16");
}
return %CreateInt8x16((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)),
(%_ToNumber(G)),(%_ToNumber(H)),
(%_ToNumber(I)),(%_ToNumber(J)),
(%_ToNumber(c8)),(%_ToNumber(c9)),
(%_ToNumber(c10)),(%_ToNumber(c11)),
(%_ToNumber(c12)),(%_ToNumber(c13)),
(%_ToNumber(c14)),(%_ToNumber(c15)));
}
function Uint8x16Constructor(C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
if(!(new.target===(void 0))){
throw d(66,"Uint8x16");
}
return %CreateUint8x16((%_ToNumber(C)),(%_ToNumber(D)),
(%_ToNumber(E)),(%_ToNumber(F)),
(%_ToNumber(G)),(%_ToNumber(H)),
(%_ToNumber(I)),(%_ToNumber(J)),
(%_ToNumber(c8)),(%_ToNumber(c9)),
(%_ToNumber(c10)),(%_ToNumber(c11)),
(%_ToNumber(c12)),(%_ToNumber(c13)),
(%_ToNumber(c14)),(%_ToNumber(c15)));
}
function Bool8x16Constructor(C,D,E,F,G,H,I,J,c8,c9,c10,c11,
c12,c13,c14,c15){
if(!(new.target===(void 0))){
throw d(66,"Bool8x16");
}
return %CreateBool8x16(C,D,E,F,G,H,I,J,c8,c9,c10,c11,c12,
c13,c14,c15);
}
function Float32x4AbsJS(q){
return %Float32x4Abs(q);
}
function Float32x4SqrtJS(q){
return %Float32x4Sqrt(q);
}
function Float32x4RecipApproxJS(q){
return %Float32x4RecipApprox(q);
}
function Float32x4RecipSqrtApproxJS(q){
return %Float32x4RecipSqrtApprox(q);
}
function Float32x4DivJS(q,x){
return %Float32x4Div(q,x);
}
function Float32x4MinNumJS(q,x){
return %Float32x4MinNum(q,x);
}
function Float32x4MaxNumJS(q,x){
return %Float32x4MaxNum(q,x);
}
%AddNamedProperty(c,e,'SIMD',1|2);
%SetCode(g,Float32x4Constructor);
%FunctionSetPrototype(g,{});
%AddNamedProperty(g.prototype,'constructor',g,
2);
%AddNamedProperty(g.prototype,e,'Float32x4',
2|1);
b.InstallFunctions(g.prototype,2,[
'toLocaleString',Float32x4ToLocaleString,
'toString',Float32x4ToString,
'valueOf',Float32x4ValueOf,
]);


%SetCode(h,Int32x4Constructor);
%FunctionSetPrototype(h,{});
%AddNamedProperty(h.prototype,'constructor',h,
2);
%AddNamedProperty(h.prototype,e,'Int32x4',
2|1);
b.InstallFunctions(h.prototype,2,[
'toLocaleString',Int32x4ToLocaleString,
'toString',Int32x4ToString,
'valueOf',Int32x4ValueOf,
]);

%SetCode(i,Int16x8Constructor);
%FunctionSetPrototype(i,{});
%AddNamedProperty(i.prototype,'constructor',i,
2);
%AddNamedProperty(i.prototype,e,'Int16x8',
2|1);
b.InstallFunctions(i.prototype,2,[
'toLocaleString',Int16x8ToLocaleString,
'toString',Int16x8ToString,
'valueOf',Int16x8ValueOf,
]);

%SetCode(j,Int8x16Constructor);
%FunctionSetPrototype(j,{});
%AddNamedProperty(j.prototype,'constructor',j,
2);
%AddNamedProperty(j.prototype,e,'Int8x16',
2|1);
b.InstallFunctions(j.prototype,2,[
'toLocaleString',Int8x16ToLocaleString,
'toString',Int8x16ToString,
'valueOf',Int8x16ValueOf,
]);


%SetCode(k,Uint32x4Constructor);
%FunctionSetPrototype(k,{});
%AddNamedProperty(k.prototype,'constructor',k,
2);
%AddNamedProperty(k.prototype,e,'Uint32x4',
2|1);
b.InstallFunctions(k.prototype,2,[
'toLocaleString',Uint32x4ToLocaleString,
'toString',Uint32x4ToString,
'valueOf',Uint32x4ValueOf,
]);

%SetCode(l,Uint16x8Constructor);
%FunctionSetPrototype(l,{});
%AddNamedProperty(l.prototype,'constructor',l,
2);
%AddNamedProperty(l.prototype,e,'Uint16x8',
2|1);
b.InstallFunctions(l.prototype,2,[
'toLocaleString',Uint16x8ToLocaleString,
'toString',Uint16x8ToString,
'valueOf',Uint16x8ValueOf,
]);

%SetCode(m,Uint8x16Constructor);
%FunctionSetPrototype(m,{});
%AddNamedProperty(m.prototype,'constructor',m,
2);
%AddNamedProperty(m.prototype,e,'Uint8x16',
2|1);
b.InstallFunctions(m.prototype,2,[
'toLocaleString',Uint8x16ToLocaleString,
'toString',Uint8x16ToString,
'valueOf',Uint8x16ValueOf,
]);


%SetCode(n,Bool32x4Constructor);
%FunctionSetPrototype(n,{});
%AddNamedProperty(n.prototype,'constructor',n,
2);
%AddNamedProperty(n.prototype,e,'Bool32x4',
2|1);
b.InstallFunctions(n.prototype,2,[
'toLocaleString',Bool32x4ToLocaleString,
'toString',Bool32x4ToString,
'valueOf',Bool32x4ValueOf,
]);

%SetCode(o,Bool16x8Constructor);
%FunctionSetPrototype(o,{});
%AddNamedProperty(o.prototype,'constructor',o,
2);
%AddNamedProperty(o.prototype,e,'Bool16x8',
2|1);
b.InstallFunctions(o.prototype,2,[
'toLocaleString',Bool16x8ToLocaleString,
'toString',Bool16x8ToString,
'valueOf',Bool16x8ValueOf,
]);

%SetCode(p,Bool8x16Constructor);
%FunctionSetPrototype(p,{});
%AddNamedProperty(p.prototype,'constructor',p,
2);
%AddNamedProperty(p.prototype,e,'Bool8x16',
2|1);
b.InstallFunctions(p.prototype,2,[
'toLocaleString',Bool8x16ToLocaleString,
'toString',Bool8x16ToString,
'valueOf',Bool8x16ValueOf,
]);



b.InstallFunctions(g,2,[
'splat',Float32x4Splat,
'check',Float32x4CheckJS,
'extractLane',Float32x4ExtractLaneJS,
'replaceLane',Float32x4ReplaceLaneJS,
'neg',Float32x4NegJS,
'abs',Float32x4AbsJS,
'sqrt',Float32x4SqrtJS,
'reciprocalApproximation',Float32x4RecipApproxJS,
'reciprocalSqrtApproximation',Float32x4RecipSqrtApproxJS,
'add',Float32x4AddJS,
'sub',Float32x4SubJS,
'mul',Float32x4MulJS,
'div',Float32x4DivJS,
'min',Float32x4MinJS,
'max',Float32x4MaxJS,
'minNum',Float32x4MinNumJS,
'maxNum',Float32x4MaxNumJS,
'lessThan',Float32x4LessThanJS,
'lessThanOrEqual',Float32x4LessThanOrEqualJS,
'greaterThan',Float32x4GreaterThanJS,
'greaterThanOrEqual',Float32x4GreaterThanOrEqualJS,
'equal',Float32x4EqualJS,
'notEqual',Float32x4NotEqualJS,
'select',Float32x4SelectJS,
'swizzle',Float32x4SwizzleJS,
'shuffle',Float32x4ShuffleJS,
'fromInt32x4',Float32x4FromInt32x4JS,
'fromUint32x4',Float32x4FromUint32x4JS,
'fromInt32x4Bits',Float32x4FromInt32x4BitsJS,
'fromUint32x4Bits',Float32x4FromUint32x4BitsJS,
'fromInt16x8Bits',Float32x4FromInt16x8BitsJS,
'fromUint16x8Bits',Float32x4FromUint16x8BitsJS,
'fromInt8x16Bits',Float32x4FromInt8x16BitsJS,
'fromUint8x16Bits',Float32x4FromUint8x16BitsJS,
'load',Float32x4LoadJS,
'load1',Float32x4Load1JS,
'load2',Float32x4Load2JS,
'load3',Float32x4Load3JS,
'store',Float32x4StoreJS,
'store1',Float32x4Store1JS,
'store2',Float32x4Store2JS,
'store3',Float32x4Store3JS,
]);
b.InstallFunctions(h,2,[
'splat',Int32x4Splat,
'check',Int32x4CheckJS,
'extractLane',Int32x4ExtractLaneJS,
'replaceLane',Int32x4ReplaceLaneJS,
'neg',Int32x4NegJS,
'add',Int32x4AddJS,
'sub',Int32x4SubJS,
'mul',Int32x4MulJS,
'min',Int32x4MinJS,
'max',Int32x4MaxJS,
'and',Int32x4AndJS,
'or',Int32x4OrJS,
'xor',Int32x4XorJS,
'not',Int32x4NotJS,
'shiftLeftByScalar',Int32x4ShiftLeftByScalarJS,
'shiftRightByScalar',Int32x4ShiftRightByScalarJS,
'lessThan',Int32x4LessThanJS,
'lessThanOrEqual',Int32x4LessThanOrEqualJS,
'greaterThan',Int32x4GreaterThanJS,
'greaterThanOrEqual',Int32x4GreaterThanOrEqualJS,
'equal',Int32x4EqualJS,
'notEqual',Int32x4NotEqualJS,
'select',Int32x4SelectJS,
'swizzle',Int32x4SwizzleJS,
'shuffle',Int32x4ShuffleJS,
'fromFloat32x4',Int32x4FromFloat32x4JS,
'fromUint32x4',Int32x4FromUint32x4JS,
'fromFloat32x4Bits',Int32x4FromFloat32x4BitsJS,
'fromUint32x4Bits',Int32x4FromUint32x4BitsJS,
'fromInt16x8Bits',Int32x4FromInt16x8BitsJS,
'fromUint16x8Bits',Int32x4FromUint16x8BitsJS,
'fromInt8x16Bits',Int32x4FromInt8x16BitsJS,
'fromUint8x16Bits',Int32x4FromUint8x16BitsJS,
'load',Int32x4LoadJS,
'load1',Int32x4Load1JS,
'load2',Int32x4Load2JS,
'load3',Int32x4Load3JS,
'store',Int32x4StoreJS,
'store1',Int32x4Store1JS,
'store2',Int32x4Store2JS,
'store3',Int32x4Store3JS,
]);
b.InstallFunctions(k,2,[
'splat',Uint32x4Splat,
'check',Uint32x4CheckJS,
'extractLane',Uint32x4ExtractLaneJS,
'replaceLane',Uint32x4ReplaceLaneJS,
'add',Uint32x4AddJS,
'sub',Uint32x4SubJS,
'mul',Uint32x4MulJS,
'min',Uint32x4MinJS,
'max',Uint32x4MaxJS,
'and',Uint32x4AndJS,
'or',Uint32x4OrJS,
'xor',Uint32x4XorJS,
'not',Uint32x4NotJS,
'shiftLeftByScalar',Uint32x4ShiftLeftByScalarJS,
'shiftRightByScalar',Uint32x4ShiftRightByScalarJS,
'lessThan',Uint32x4LessThanJS,
'lessThanOrEqual',Uint32x4LessThanOrEqualJS,
'greaterThan',Uint32x4GreaterThanJS,
'greaterThanOrEqual',Uint32x4GreaterThanOrEqualJS,
'equal',Uint32x4EqualJS,
'notEqual',Uint32x4NotEqualJS,
'select',Uint32x4SelectJS,
'swizzle',Uint32x4SwizzleJS,
'shuffle',Uint32x4ShuffleJS,
'fromFloat32x4',Uint32x4FromFloat32x4JS,
'fromInt32x4',Uint32x4FromInt32x4JS,
'fromFloat32x4Bits',Uint32x4FromFloat32x4BitsJS,
'fromInt32x4Bits',Uint32x4FromInt32x4BitsJS,
'fromInt16x8Bits',Uint32x4FromInt16x8BitsJS,
'fromUint16x8Bits',Uint32x4FromUint16x8BitsJS,
'fromInt8x16Bits',Uint32x4FromInt8x16BitsJS,
'fromUint8x16Bits',Uint32x4FromUint8x16BitsJS,
'load',Uint32x4LoadJS,
'load1',Uint32x4Load1JS,
'load2',Uint32x4Load2JS,
'load3',Uint32x4Load3JS,
'store',Uint32x4StoreJS,
'store1',Uint32x4Store1JS,
'store2',Uint32x4Store2JS,
'store3',Uint32x4Store3JS,
]);
b.InstallFunctions(n,2,[
'splat',Bool32x4Splat,
'check',Bool32x4CheckJS,
'extractLane',Bool32x4ExtractLaneJS,
'replaceLane',Bool32x4ReplaceLaneJS,
'and',Bool32x4AndJS,
'or',Bool32x4OrJS,
'xor',Bool32x4XorJS,
'not',Bool32x4NotJS,
'anyTrue',Bool32x4AnyTrueJS,
'allTrue',Bool32x4AllTrueJS,
'swizzle',Bool32x4SwizzleJS,
'shuffle',Bool32x4ShuffleJS,
]);
b.InstallFunctions(i,2,[
'splat',Int16x8Splat,
'check',Int16x8CheckJS,
'extractLane',Int16x8ExtractLaneJS,
'replaceLane',Int16x8ReplaceLaneJS,
'neg',Int16x8NegJS,
'add',Int16x8AddJS,
'sub',Int16x8SubJS,
'addSaturate',Int16x8AddSaturateJS,
'subSaturate',Int16x8SubSaturateJS,
'mul',Int16x8MulJS,
'min',Int16x8MinJS,
'max',Int16x8MaxJS,
'and',Int16x8AndJS,
'or',Int16x8OrJS,
'xor',Int16x8XorJS,
'not',Int16x8NotJS,
'shiftLeftByScalar',Int16x8ShiftLeftByScalarJS,
'shiftRightByScalar',Int16x8ShiftRightByScalarJS,
'lessThan',Int16x8LessThanJS,
'lessThanOrEqual',Int16x8LessThanOrEqualJS,
'greaterThan',Int16x8GreaterThanJS,
'greaterThanOrEqual',Int16x8GreaterThanOrEqualJS,
'equal',Int16x8EqualJS,
'notEqual',Int16x8NotEqualJS,
'select',Int16x8SelectJS,
'swizzle',Int16x8SwizzleJS,
'shuffle',Int16x8ShuffleJS,
'fromUint16x8',Int16x8FromUint16x8JS,
'fromFloat32x4Bits',Int16x8FromFloat32x4BitsJS,
'fromInt32x4Bits',Int16x8FromInt32x4BitsJS,
'fromUint32x4Bits',Int16x8FromUint32x4BitsJS,
'fromUint16x8Bits',Int16x8FromUint16x8BitsJS,
'fromInt8x16Bits',Int16x8FromInt8x16BitsJS,
'fromUint8x16Bits',Int16x8FromUint8x16BitsJS,
'load',Int16x8LoadJS,
'store',Int16x8StoreJS,
]);
b.InstallFunctions(l,2,[
'splat',Uint16x8Splat,
'check',Uint16x8CheckJS,
'extractLane',Uint16x8ExtractLaneJS,
'replaceLane',Uint16x8ReplaceLaneJS,
'add',Uint16x8AddJS,
'sub',Uint16x8SubJS,
'addSaturate',Uint16x8AddSaturateJS,
'subSaturate',Uint16x8SubSaturateJS,
'mul',Uint16x8MulJS,
'min',Uint16x8MinJS,
'max',Uint16x8MaxJS,
'and',Uint16x8AndJS,
'or',Uint16x8OrJS,
'xor',Uint16x8XorJS,
'not',Uint16x8NotJS,
'shiftLeftByScalar',Uint16x8ShiftLeftByScalarJS,
'shiftRightByScalar',Uint16x8ShiftRightByScalarJS,
'lessThan',Uint16x8LessThanJS,
'lessThanOrEqual',Uint16x8LessThanOrEqualJS,
'greaterThan',Uint16x8GreaterThanJS,
'greaterThanOrEqual',Uint16x8GreaterThanOrEqualJS,
'equal',Uint16x8EqualJS,
'notEqual',Uint16x8NotEqualJS,
'select',Uint16x8SelectJS,
'swizzle',Uint16x8SwizzleJS,
'shuffle',Uint16x8ShuffleJS,
'fromInt16x8',Uint16x8FromInt16x8JS,
'fromFloat32x4Bits',Uint16x8FromFloat32x4BitsJS,
'fromInt32x4Bits',Uint16x8FromInt32x4BitsJS,
'fromUint32x4Bits',Uint16x8FromUint32x4BitsJS,
'fromInt16x8Bits',Uint16x8FromInt16x8BitsJS,
'fromInt8x16Bits',Uint16x8FromInt8x16BitsJS,
'fromUint8x16Bits',Uint16x8FromUint8x16BitsJS,
'load',Uint16x8LoadJS,
'store',Uint16x8StoreJS,
]);
b.InstallFunctions(o,2,[
'splat',Bool16x8Splat,
'check',Bool16x8CheckJS,
'extractLane',Bool16x8ExtractLaneJS,
'replaceLane',Bool16x8ReplaceLaneJS,
'and',Bool16x8AndJS,
'or',Bool16x8OrJS,
'xor',Bool16x8XorJS,
'not',Bool16x8NotJS,
'anyTrue',Bool16x8AnyTrueJS,
'allTrue',Bool16x8AllTrueJS,
'swizzle',Bool16x8SwizzleJS,
'shuffle',Bool16x8ShuffleJS,
]);
b.InstallFunctions(j,2,[
'splat',Int8x16Splat,
'check',Int8x16CheckJS,
'extractLane',Int8x16ExtractLaneJS,
'replaceLane',Int8x16ReplaceLaneJS,
'neg',Int8x16NegJS,
'add',Int8x16AddJS,
'sub',Int8x16SubJS,
'addSaturate',Int8x16AddSaturateJS,
'subSaturate',Int8x16SubSaturateJS,
'mul',Int8x16MulJS,
'min',Int8x16MinJS,
'max',Int8x16MaxJS,
'and',Int8x16AndJS,
'or',Int8x16OrJS,
'xor',Int8x16XorJS,
'not',Int8x16NotJS,
'shiftLeftByScalar',Int8x16ShiftLeftByScalarJS,
'shiftRightByScalar',Int8x16ShiftRightByScalarJS,
'lessThan',Int8x16LessThanJS,
'lessThanOrEqual',Int8x16LessThanOrEqualJS,
'greaterThan',Int8x16GreaterThanJS,
'greaterThanOrEqual',Int8x16GreaterThanOrEqualJS,
'equal',Int8x16EqualJS,
'notEqual',Int8x16NotEqualJS,
'select',Int8x16SelectJS,
'swizzle',Int8x16SwizzleJS,
'shuffle',Int8x16ShuffleJS,
'fromUint8x16',Int8x16FromUint8x16JS,
'fromFloat32x4Bits',Int8x16FromFloat32x4BitsJS,
'fromInt32x4Bits',Int8x16FromInt32x4BitsJS,
'fromUint32x4Bits',Int8x16FromUint32x4BitsJS,
'fromInt16x8Bits',Int8x16FromInt16x8BitsJS,
'fromUint16x8Bits',Int8x16FromUint16x8BitsJS,
'fromUint8x16Bits',Int8x16FromUint8x16BitsJS,
'load',Int8x16LoadJS,
'store',Int8x16StoreJS,
]);
b.InstallFunctions(m,2,[
'splat',Uint8x16Splat,
'check',Uint8x16CheckJS,
'extractLane',Uint8x16ExtractLaneJS,
'replaceLane',Uint8x16ReplaceLaneJS,
'add',Uint8x16AddJS,
'sub',Uint8x16SubJS,
'addSaturate',Uint8x16AddSaturateJS,
'subSaturate',Uint8x16SubSaturateJS,
'mul',Uint8x16MulJS,
'min',Uint8x16MinJS,
'max',Uint8x16MaxJS,
'and',Uint8x16AndJS,
'or',Uint8x16OrJS,
'xor',Uint8x16XorJS,
'not',Uint8x16NotJS,
'shiftLeftByScalar',Uint8x16ShiftLeftByScalarJS,
'shiftRightByScalar',Uint8x16ShiftRightByScalarJS,
'lessThan',Uint8x16LessThanJS,
'lessThanOrEqual',Uint8x16LessThanOrEqualJS,
'greaterThan',Uint8x16GreaterThanJS,
'greaterThanOrEqual',Uint8x16GreaterThanOrEqualJS,
'equal',Uint8x16EqualJS,
'notEqual',Uint8x16NotEqualJS,
'select',Uint8x16SelectJS,
'swizzle',Uint8x16SwizzleJS,
'shuffle',Uint8x16ShuffleJS,
'fromInt8x16',Uint8x16FromInt8x16JS,
'fromFloat32x4Bits',Uint8x16FromFloat32x4BitsJS,
'fromInt32x4Bits',Uint8x16FromInt32x4BitsJS,
'fromUint32x4Bits',Uint8x16FromUint32x4BitsJS,
'fromInt16x8Bits',Uint8x16FromInt16x8BitsJS,
'fromUint16x8Bits',Uint8x16FromUint16x8BitsJS,
'fromInt8x16Bits',Uint8x16FromInt8x16BitsJS,
'load',Uint8x16LoadJS,
'store',Uint8x16StoreJS,
]);
b.InstallFunctions(p,2,[
'splat',Bool8x16Splat,
'check',Bool8x16CheckJS,
'extractLane',Bool8x16ExtractLaneJS,
'replaceLane',Bool8x16ReplaceLaneJS,
'and',Bool8x16AndJS,
'or',Bool8x16OrJS,
'xor',Bool8x16XorJS,
'not',Bool8x16NotJS,
'anyTrue',Bool8x16AnyTrueJS,
'allTrue',Bool8x16AllTrueJS,
'swizzle',Bool8x16SwizzleJS,
'shuffle',Bool8x16ShuffleJS,
]);
b.Export(function(K){
K.Float32x4ToString=Float32x4ToString;
K.Int32x4ToString=Int32x4ToString;
K.Uint32x4ToString=Uint32x4ToString;
K.Bool32x4ToString=Bool32x4ToString;
K.Int16x8ToString=Int16x8ToString;
K.Uint16x8ToString=Uint16x8ToString;
K.Bool16x8ToString=Bool16x8ToString;
K.Int8x16ToString=Int8x16ToString;
K.Uint8x16ToString=Uint8x16ToString;
K.Bool8x16ToString=Bool8x16ToString;
});
})

<harmony-speciesE